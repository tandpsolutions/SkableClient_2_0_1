/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package support;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import model.UserRightsModel;
import skable.SkableHome;

/**
 *
 * @author Mehul
 */
public abstract class SmallNavigation extends javax.swing.JPanel {

    /**
     * Creates new form SmallNavigation
     */
    private boolean saveFlag = true;
    private String editMode = "";
    public ResultSet viewData = null;
    String Syspath = System.getProperty("user.dir");
    private int formCd;
    private UserRightsModel model;

    public SmallNavigation() {
        initComponents();
        setSaveFlag(saveFlag);
        registerShortcutKey();
    }

    public void setFormCd(int formCd) {
        this.formCd = formCd;
        applyRights();
    }

    public int getFormCd() {
        return formCd;
    }

    public UserRightsModel getModel() {
        return model;
    }

    public void setModel(UserRightsModel model) {
        this.model = model;
    }

    abstract public void callNew();

    abstract public void callEdit();

    abstract public void callDelete();

    abstract public void callClose();

    abstract public void callPrint();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void navKeyPress(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            evt.consume();
            JButton button = (JButton) evt.getSource();
            button.doClick();
        }
    }

    private void applyRights() {
        model = SkableHome.userRightsMap.get(getFormCd());
        if (model != null) {
            if (model.getADDS().equalsIgnoreCase("1")) {
                jbtnNew.setEnabled(true);
            } else {
                jbtnNew.setEnabled(false);
            }

            if (model.getEDITS().equalsIgnoreCase("1")) {
                jbtnEdit.setEnabled(true);
            } else {
                jbtnEdit.setEnabled(false);
            }

            if (model.getDELETES().equalsIgnoreCase("1")) {
                jbtnDelete.setEnabled(true);
            } else {
                jbtnDelete.setEnabled(false);
            }

            if (model.getPRINTS().equalsIgnoreCase("1")) {
                jbtnPrint.setEnabled(true);
            } else {
                jbtnPrint.setEnabled(false);
            }
        }
    }

    private void navButtonPress(java.awt.event.ActionEvent evt) {
        JButton button = (JButton) evt.getSource();
        if (button == jbtnNew) {
            callNew();
        } else if (button == jbtnEdit) {
//            if(mais.MaisHome.role != 2){
            callEdit();
//            } else{
//                setMessage("You can not edit this voucher.");
//            }
        } else if (button == jbtnDelete) {
//            if(mais.MaisHome.role != 2){
            callDelete();
//            } else{
//            setMessage("You can not delete this voucher.");
//            }
        } else if (button == jbtnClose) {
            callClose();
        } else if (button == jbtnPrint) {
            callPrint();
        }
    }

    private void setEnableComp(boolean flag) {
        jbtnNew.setEnabled(flag);
        jbtnEdit.setEnabled(flag);
        jbtnDelete.setEnabled(flag);
    }

    public void setMessage(String message) {
        jlblMessage.setText(message + " ");
    }

    public void setMode(String mode) {
        editMode = mode;
    }

    public String getMode() {
        return editMode;
    }

    public boolean getSaveFlag() {
        return saveFlag;
    }

    public final void setSaveFlag(boolean flag) {
        saveFlag = flag;
        if (saveFlag) {
            jbtnClose.setText("Close");
        } else {
            jbtnClose.setText("Cancel");
        }
        setEnableComp(saveFlag);
    }

    public void setNewFocus() {
        jbtnNew.requestFocusInWindow();
    }

    public void setEditFocus() {
        jbtnEdit.requestFocusInWindow();
    }

    public void setDeleteFocus() {
        jbtnDelete.requestFocusInWindow();
    }

    public void setCloseFocus() {
        jbtnClose.requestFocusInWindow();
    }

    private void registerShortcutKey() {
        KeyStroke newKeyStroke = KeyStroke.getKeyStroke(KeyEvent.VK_N, KeyEvent.CTRL_MASK, false);
        Action newKeyAction = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                jbtnNew.doClick();
            }
        };
        this.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(newKeyStroke, "New");
        this.getActionMap().put("New", newKeyAction);

        KeyStroke editKeyStroke = KeyStroke.getKeyStroke(KeyEvent.VK_E, KeyEvent.CTRL_MASK, false);
        Action editKeyAction = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                jbtnEdit.doClick();
            }
        };
        this.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(editKeyStroke, "Edit");
        this.getActionMap().put("Edit", editKeyAction);

        KeyStroke delKeyStroke = KeyStroke.getKeyStroke(KeyEvent.VK_D, KeyEvent.CTRL_MASK, false);
        Action delKeyAction = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                jbtnDelete.doClick();
            }
        };
        this.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(delKeyStroke, "Delete");
        this.getActionMap().put("Delete", delKeyAction);

        KeyStroke printKeyStroke = KeyStroke.getKeyStroke(KeyEvent.VK_P, KeyEvent.CTRL_MASK, false);
        Action printKeyAction = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                jbtnPrint.doClick();
            }
        };
        this.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(printKeyStroke, "Print");
        this.getActionMap().put("Print", printKeyAction);

        KeyStroke closeKeyStroke = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0, false);
        Action closeKeyAction = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                jbtnClose.doClick();
            }
        };
        this.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(closeKeyStroke, "Close");
        this.getActionMap().put("Close", closeKeyAction);

    }

    public void setNewEnable(boolean flag) {
        jbtnNew.setEnabled(flag);
    }

    public void setEditEnable(boolean flag) {
        jbtnEdit.setEnabled(flag);
    }

    public void setDeleteEnable(boolean flag) {
        jbtnDelete.setEnabled(flag);
    }

    public void setPrintEnable(boolean flag) {
        jbtnPrint.setEnabled(flag);
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtnNew = new javax.swing.JButton();
        jbtnEdit = new javax.swing.JButton();
        jbtnDelete = new javax.swing.JButton();
        jbtnClose = new javax.swing.JButton();
        jlblMessage = new javax.swing.JLabel();
        jbtnPrint = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(407, 44));

        jbtnNew.setText("New");
        jbtnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNewActionPerformed(evt);
            }
        });
        jbtnNew.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnNewKeyPressed(evt);
            }
        });

        jbtnEdit.setText("Edit");
        jbtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEditActionPerformed(evt);
            }
        });
        jbtnEdit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnEditKeyPressed(evt);
            }
        });

        jbtnDelete.setText("Delete");
        jbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteActionPerformed(evt);
            }
        });
        jbtnDelete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnDeleteKeyPressed(evt);
            }
        });

        jbtnClose.setText("Close");
        jbtnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCloseActionPerformed(evt);
            }
        });
        jbtnClose.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnCloseKeyPressed(evt);
            }
        });

        jlblMessage.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlblMessage.setForeground(new java.awt.Color(255, 51, 51));
        jlblMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblMessage.setText("     ");
        jlblMessage.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jbtnPrint.setText("Print");
        jbtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPrintActionPerformed(evt);
            }
        });
        jbtnPrint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnPrintKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jlblMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jlblMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnNew)
                    .addComponent(jbtnEdit)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbtnDelete)
                        .addComponent(jbtnClose)
                        .addComponent(jbtnPrint))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnNewActionPerformed
        navButtonPress(evt);
    }//GEN-LAST:event_jbtnNewActionPerformed

    private void jbtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEditActionPerformed
        navButtonPress(evt);
    }//GEN-LAST:event_jbtnEditActionPerformed

    private void jbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteActionPerformed
        navButtonPress(evt);
    }//GEN-LAST:event_jbtnDeleteActionPerformed

    private void jbtnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCloseActionPerformed
        navButtonPress(evt);
    }//GEN-LAST:event_jbtnCloseActionPerformed

    private void jbtnNewKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnNewKeyPressed
        navKeyPress(evt);
    }//GEN-LAST:event_jbtnNewKeyPressed

    private void jbtnEditKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnEditKeyPressed
        navKeyPress(evt);
    }//GEN-LAST:event_jbtnEditKeyPressed

    private void jbtnDeleteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnDeleteKeyPressed
        navKeyPress(evt);
    }//GEN-LAST:event_jbtnDeleteKeyPressed

    private void jbtnCloseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnCloseKeyPressed
        navKeyPress(evt);
    }//GEN-LAST:event_jbtnCloseKeyPressed

    private void jbtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPrintActionPerformed
        // TODO add your handling code here:
        navButtonPress(evt);
    }//GEN-LAST:event_jbtnPrintActionPerformed

    private void jbtnPrintKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnPrintKeyPressed
        // TODO add your handling code here:
        navKeyPress(evt);
    }//GEN-LAST:event_jbtnPrintKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbtnClose;
    private javax.swing.JButton jbtnDelete;
    private javax.swing.JButton jbtnEdit;
    private javax.swing.JButton jbtnNew;
    private javax.swing.JButton jbtnPrint;
    private javax.swing.JLabel jlblMessage;
    // End of variables declaration//GEN-END:variables
}
